# See: https://docs.github.com/en/actions/writing-workflows
---
name: Release

on:
  push:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      # 1) Install MSYS2 + the Mingw-w64 Perl toolchain, make, pkg-config
      - name: Setup MSYS2 toolchain
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-perl
            mingw-w64-x86_64-pkg-config
            make

      # 2) Prepend the MSYS2 mingw64/bin to PATH for subsequent steps
      - name: Prepend MSYS2 to PATH
        run: echo "C:\\msys64\\mingw64\\bin" >> $Env:GITHUB_PATH

      # 3) **Build inside MSYS2** so that the vendored OpenSSL build uses the MSYS2 Perl
      - name: Build (vendored OpenSSL)
        # run this step under the msys2 bash environment
        shell: msys2 {0}
        run: |
          # ensure the Windows GNU target is installed
          rustup toolchain install 1.85.0-x86_64-pc-windows-gnu
          rustup default 1.85.0-x86_64-pc-windows-gnu
          rustup target add x86_64-pc-windows-gnu

          # now cargo will pick up the MSYS2 perl and build openssl-src correctly
          cargo build --release --target x86_64-pc-windows-gnu
