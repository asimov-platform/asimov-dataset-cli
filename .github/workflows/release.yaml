# .github/workflows/release.yml
name: Release

on:
  push:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          # Example: Only building for linux-arm-gnu now.
          - os: ubuntu-latest
            artifact: linux-arm-gnu
            target: aarch64-unknown-linux-gnu
            use-zigbuild: true
            glibc-version: 2.28
          # Add other targets as needed...

    name: Build ${{ matrix.artifact }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install native libudev-dev
        run: |
          sudo apt-get update
          sudo apt-get install --yes libudev-dev

      - name: Enable arm64 & install cross toolchain (if needed)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          # Enable arm64 architecture
          sudo dpkg --add-architecture arm64
          sudo apt-get update

          # Install cross compiler, cross libraries, and pkg-config
          sudo apt-get install --yes \
            crossbuild-essential-arm64 \
            libudev-dev:arm64 \
            pkg-config

          # Tell pkg-config to allow cross, point it to arm64 .pc files
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_SYSROOT_DIR=/" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig" >> $GITHUB_ENV

      - name: Build
        uses: asimov-platform/build-rust-action@v2
        env:
          OPENSSL_NO_VENDOR: 1
        with:
          target: ${{ matrix.target }}
          artifact-name: ${{ matrix.artifact }}
          artifact-prefix: asimov
          binary-name: asimov-dataset-cli
          binary-extension: ${{ matrix.extension }}
          strip-artifact: ${{ matrix.strip || 'false' }}
          use-zigbuild: ${{ matrix.use-zigbuild || 'false' }}
          rust-toolchain: stable

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    permissions:
      contents: write
    steps:
      - name: Release
        uses: asimov-platform/release-action@v2
        with:
          token: ${{ secrets.PAT_RELEASE }}
          changelog-path: CHANGES.md
