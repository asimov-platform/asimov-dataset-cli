name: Release

on:
  push:
  workflow_dispatch:
  # If you only want to trigger on tagged pushes:
  # push:
  #   tags:
  #     - "*"

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            artifact: linux-arm-gnu
            target: aarch64-unknown-linux-gnu

    name: Build ${{ matrix.artifact }}
    runs-on: ${{ matrix.os }}

    # Set these env vars so pkg-config knows it's cross-compiling to ARM64:
    env:
      PKG_CONFIG_ALLOW_CROSS: "1"
      # This tells pkg-config that all files are located under /
      PKG_CONFIG_SYSROOT_DIR: "/"
      # Where the .pc files for ARM64 libraries typically install on Ubuntu
      PKG_CONFIG_PATH: "/usr/lib/aarch64-linux-gnu/pkgconfig"

    steps:
      - name: Set up cross-compiler and ARM64 libudev
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update

          # 1) Install the cross toolchain
          sudo apt-get install --yes \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu

          # 2) Install ARM64 libudev for cross‚Äêcompiling hidapi
          sudo apt-get install --yes libudev-dev:arm64

      - name: Install host system dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install --yes libudev-dev

      - name: Check out
        uses: actions/checkout@v3

      - name: Build
        uses: asimov-platform/build-rust-action@v2
        with:
          target: ${{ matrix.target }}
          artifact-name: ${{ matrix.artifact }}
          artifact-prefix: asimov
          binary-name: asimov-dataset-cli
          strip-artifact: false
          use-zigbuild: false
          rust-toolchain: stable

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    permissions:
      contents: write
    steps:
      - name: Create Release
        uses: asimov-platform/release-action@v2
        with:
          token: ${{ secrets.PAT_RELEASE }}
          changelog-path: CHANGES.md
